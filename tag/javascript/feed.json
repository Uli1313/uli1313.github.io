{
    "version": "https://jsonfeed.org/version/1",
    "title": "Uli's blog • All posts by \"javascript\" tag",
    "description": "哈囉~",
    "home_page_url": "http://uli1313.github.io",
    "items": [
        {
            "id": "http://uli1313.github.io/2024/240409/",
            "url": "http://uli1313.github.io/2024/240409/",
            "title": "Cookie、Local storage、Session storage 的比較以及使用方法",
            "date_published": "2024-04-09T12:19:45.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Cookie、Local Storage 和 Session Storage 是在瀏覽器中常見的三種客戶端存儲機制，這三者的使用方式、時機、特性不大相同。</p>\n<p>之前在寫專案時多少會有需要儲存資料在瀏覽器的時候，但分不太清楚 Cookie、Local Storage 和 Session Storage 這三者的差別，因此藉由文章來記錄一下。</p>\n<h2 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h2><ul>\n<li>使用 <code>&quot;name=value&quot;</code> 格式的字串儲存</li>\n<li>儲存空間較小，約 4KB</li>\n<li>發送請求時都會帶上 Cookie，適合用來儲存辨識用戶用的 token 等資料</li>\n<li>Cookie 如果沒有設定到期時間或期限，預設是會在關閉瀏覽器時失效</li>\n</ul>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 設定 Cookie</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = <span class=\"string\">&quot;test=Hello&quot;</span>; <span class=\"comment\">// 格式: &quot;name=value&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 取得 Cookie</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> testCookie = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">replace</span>(</span><br><span class=\"line\">  <span class=\"regexp\">/(?:(?:^|.*;\\s*)test\\s*\\=\\s*([^;]*).*$)|^.*$/</span>, <span class=\"comment\">// test 處帶入 cookie 的 name</span></span><br><span class=\"line\">  <span class=\"string\">&quot;$1&quot;</span></span><br><span class=\"line\">); <span class=\"comment\">// Hello</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"設定有效期限\"><a href=\"#設定有效期限\" class=\"headerlink\" title=\"設定有效期限\"></a>設定有效期限</h3><p>Cookie 有兩種設定期限的方式，分別是 <code>max-age</code> 和 <code>expires</code> ，在 <code>name=value</code> 後面加入分號後，在分號後面就可以做設定。</p>\n<h4 id=\"max-age\"><a href=\"#max-age\" class=\"headerlink\" title=\"max-age\"></a>max-age</h4><p><code>max-age</code> 會帶入以秒為單位的數值，使該 cookie 在指定的秒數後過期。如果希望在一小時後過期，就將 <code>max-age</code> 設置為 3600。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = <span class=\"string\">&quot;test=Hello; max-age=3600&quot;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"expires\"><a href=\"#expires\" class=\"headerlink\" title=\"expires\"></a>expires</h4><p><code>expires</code> 會帶入 GMT 格式的時間字串，如果希望 cookie 在一小時後過期，可以先取得當前時間利用 <code>getTime()</code> 取得毫秒格式，接著加上要多少毫秒後到期再轉回 GMT 格式，最後再使用 <code>toUTCString()</code> 方法轉換為字串就可以存到 Cookie 了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> expireDate = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(); <span class=\"comment\">// 取得當前時間</span></span><br><span class=\"line\">expireDate.<span class=\"title function_\">setTime</span>(expireDate.<span class=\"title function_\">getTime</span>() + (<span class=\"number\">1</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>)); <span class=\"comment\">// 加上一小時的 GMT 時間</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> expires = expireDate.<span class=\"title function_\">toUTCString</span>(); <span class=\"comment\">// 將 date 物件轉為字串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = <span class=\"string\">`test=Hello; expires=<span class=\"subst\">$&#123;expires&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Local-storage、Session-storage\"><a href=\"#Local-storage、Session-storage\" class=\"headerlink\" title=\"Local storage、Session storage\"></a>Local storage、Session storage</h2><ul>\n<li>以 Key 和 Value 的格式儲存，這兩者皆為字串</li>\n<li>相較於 Cookie 有較大的儲存空間，依據瀏覽器的不同有不同的大小空間 (5~10MB) (見<a href=\"https://en.wikipedia.org/wiki/Web_storage#Storage_size\">維基</a>)</li>\n</ul>\n<p>Local storage 與 Session storage 的差別在於：</p>\n<ul>\n<li>Local storage 的資料即便關閉瀏覽器也不會消失。如果沒有手動刪除或者透過程式碼移除，就會一直儲存在瀏覽器中</li>\n<li>Session storage 的資料當關閉瀏覽器或關閉分頁時就會清除，重整時不會消失</li>\n</ul>\n<h3 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>Local storage 與 Session storage 具有相同的方法可以使用，以下使用 Local storage 作為例子：</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 設定資料</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;key&#x27;</span>, <span class=\"string\">&#x27;value&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 取得資料</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;key&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 移除單一資料</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;key&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 移除所有資料</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">clear</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Local-storage-與-Session-storage-儲存資料時的要注意的地方\"><a href=\"#Local-storage-與-Session-storage-儲存資料時的要注意的地方\" class=\"headerlink\" title=\"Local storage 與 Session storage 儲存資料時的要注意的地方\"></a>Local storage 與 Session storage 儲存資料時的要注意的地方</h3><p>Local storage 與 Session storage 在儲存資料時會自動以字串形式來儲存，假設儲存布林值 <code>true</code> 後，單純取出值的結果會是一個字串型態的 <code>&#39;true&#39;</code>。</p>\n<p>這邊可以透過 <code>JSON.parse()</code> 方法進行轉換。<code>JSON.parse()</code> 方法會根據 JSON 字串的結構和內容來辨別資料型態，所以當取出來的字串為 <code>&#39;true&#39;</code> 時就會辨別成布林值，最後回傳布林值 <code>true</code> 的結果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;localData&#x27;</span>, data)</span><br><span class=\"line\"><span class=\"keyword\">const</span> getData = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;localData&#x27;</span>) <span class=\"comment\">// string &#x27;true&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;localData2&#x27;</span>, data)</span><br><span class=\"line\"><span class=\"keyword\">const</span> getData2 =  <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;localData2&#x27;</span>)) <span class=\"comment\">// boolean true</span></span><br></pre></td></tr></table></figure>\n\n<p>另外當設定的資料為鍵值對的物件時，直接對其使用 <code>setItem()</code> 的話，存入的會是 <code>[object Object]</code> 的字串，屆時在 <code>JSON.parse()</code> 轉換的時候會出現語法錯誤提示 <code>&quot;[object Object]&quot; is not valid JSON</code>。</p>\n<p>因此在一開始設定值的時候，可以利用 <code>JSON.stringify()</code> 的方法先轉換成字串後再存入 Local storage，陣列也是同理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> setData = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(data); <span class=\"comment\">// string &#x27;&#123;&quot;a&quot;:1&#125;&#x27;</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;localData&quot;</span>, setData);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getData = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;localData&quot;</span>)); <span class=\"comment\">// object &#123;a: 1&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h2><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\">Document: cookie property - Web APIs | MDN</a><br><a href=\"https://en.wikipedia.org/wiki/Web_storage#Storage_size\">Web storage - Wikipedia</a><br><a href=\"https://medium.com/@bebebobohaha/cookie-localstorage-sessionstorage-%E5%B7%AE%E7%95%B0-9e1d5df3dd7f\">[JavaScript] Cookie、LocalStorage、SessionStorage 差異 | by Peggy Chan | Medium</a><br><a href=\"https://www.explainthis.io/en/swe/cookie-sessionstorage-localstorage-difference\">What Is the Difference Between Cookie, sessionStorage and localStorage?</a></p>\n",
            "tags": [
                "JavaScript"
            ]
        }
    ]
}